{"version":3,"sources":["webpack:///./node_modules/near-api-js/lib/account.js","webpack:///./node_modules/near-api-js/lib/key_stores/keystore.js","webpack:///./node_modules/near-api-js/lib/account_multisig.js","webpack:///./node_modules/near-api-js/lib/wallet-account.js","webpack:///./node_modules/near-api-js/lib/providers/index.js","webpack:///./node_modules/near-api-js/lib/utils/format.js","webpack:///./node_modules/near-api-js/lib/connection.js","webpack:///./node_modules/statuses/index.js","webpack:///./node_modules/near-api-js/lib/utils/enums.js","webpack:///./node_modules/near-api-js/lib/key_stores/browser_local_storage_key_store.js","webpack:///./node_modules/near-api-js/lib/utils/key_pair.js","webpack:///./node_modules/near-api-js/lib/key_stores/in_memory_key_store.js","webpack:///./node_modules/near-api-js/lib/utils/serialize.js","webpack:///./node_modules/o3/lib/Class.js","webpack:///./node_modules/o3/index.js","webpack:///./node_modules/near-api-js/lib/utils/web.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/near-api-js/lib/utils/errors.js","webpack:///./node_modules/near-api-js/lib/utils/exponential-backoff.js","webpack:///./node_modules/near-api-js/lib/signer.js","webpack:///./node_modules/near-api-js/lib/key_stores/merge_key_store.js","webpack:///./node_modules/mustache/mustache.js","webpack:///./node_modules/near-api-js/lib/common-index.js","webpack:///./node_modules/near-api-js/lib/account_creator.js","webpack:///./node_modules/near-api-js/lib/utils/index.js","webpack:///./node_modules/near-api-js/lib/providers/json-rpc-provider.js","webpack:///./node_modules/near-api-js/lib/transaction.js","webpack:///./node_modules/near-api-js/lib/constants.js","webpack:///./node_modules/near-api-js/lib/utils/rpc_errors.js","webpack:///./node_modules/near-api-js/lib/contract.js","webpack:///./node_modules/near-api-js/lib/key_stores/browser-index.js","webpack:///./node_modules/near-api-js/lib/providers/provider.js","webpack:///./node_modules/near-api-js/lib/browser-index.js","webpack:///./node_modules/setprototypeof/index.js","webpack:///./node_modules/near-api-js/lib/browser-connect.js","webpack:///./node_modules/near-api-js/lib/validators.js","webpack:///./node_modules/o3/lib/abstractMethod.js","webpack:///./node_modules/near-api-js/lib/near.js","webpack:///./node_modules/o3/lib/index.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","Account","bn_js_1","depd_1","transaction_1","providers_1","borsh_1","key_pair_1","errors_1","rpc_errors_1","constants_1","exponential_backoff_1","TX_NONCE_RETRY_NUMBER","TX_NONCE_RETRY_WAIT","TX_NONCE_RETRY_WAIT_BACKOFF","parseJsonFromRawResponse","response","JSON","parse","Buffer","from","toString","bytesJsonStringify","input","stringify","connection","accountId","accessKeyByPublicKeyCache","deprecate","default","Promise","resolve","provider","query","request_type","account_id","finality","contractId","results","result","console","log","receiptIds","length","join","printLogs","logs","failure","warn","prefix","receiverId","actions","accessKeyInfo","findAccessKey","TypedError","networkId","signer","accessKey","block","blockHash","header","hash","nonce","signTransaction","baseDecode","args","signAndSendTransactionV1","signAndSendTransactionV2","returnError","txHash","signedTx","async","publicKey","transaction","sendTransaction","error","type","logWarning","baseEncode","context","ErrorContext","flatLogs","transaction_outcome","receipts_outcome","reduce","acc","it","outcome","status","Failure","concat","receipt_ids","parseRpcError","printLogsAndFailures","error_message","error_type","id","parseResultError","getPublicKey","cachedAccessKey","undefined","public_key","e","data","amount","fullAccessKey","signAndSendTransaction","createAccount","transfer","addKey","PublicKey","deployContract","contractAccount","newAccountId","beneficiaryId","deleteAccount","functionCallV1","functionCallV2","methodName","gas","validateArgs","functionCall","DEFAULT_FUNCTION_CALL_GAS","attachedDeposit","walletMeta","walletCallbackUrl","stringifyArg","stringifyJsonOrBytes","methodNames","Array","isArray","functionCallAccessKey","deleteKey","stake","isUint8Array","byteLength","PositionalArgsError","serializedArgs","method_name","args_base64","blockQuery","values","prefix_base64","map","key","keys","accessKeys","getAccessKeys","authorizedApps","filter","item","access_key","permission","perm","FunctionCall","receiver_id","allowance","protocolConfig","experimental_protocolConfig","state","costPerByte","runtime_config","storage_amount_per_byte","stateStaked","storage_usage","mul","staked","locked","totalBalance","add","availableBalance","sub","max","total","available","KeyStore","Account2FA","AccountMultisig","MULTISIG_CONFIRM_METHODS","MULTISIG_CHANGE_METHODS","MULTISIG_DEPOSIT","MULTISIG_GAS","MULTISIG_ALLOWANCE","MULTISIG_STORAGE_KEY","account_1","format_1","web_1","parseNearAmount","storageFallback","options","super","storage","onAddRequestResult","_signAndSendTransaction","request","convertActions","includes","deleteUnconfirmedRequests","Error","SuccessValue","setRequest","requestId","parseInt","request_ids","getRequestIds","getRequest","requestIdToDelete","request_id","viewFunction","getItem","setItem","helperUrl","sendCode","sendCodeDefault","getCode","getCodeDefault","verifyCode","verifyCodeDefault","onConfirmResult","__signAndSendTransaction","promptAndVerify","contractBytes","seedOrLedgerKey","getRecoveryMethods","kind","rm","fak2lak","ak","toPK","confirmOnlyKey","postSignedJson","newArgs","pk","code_hash","push","signAndSendTransactionWithAccount","lak2fak","method_names","method","get2faMethod","securityCode","find","m","indexOf","detail","blockNumber","height","signed","signMessage","blockNumberSignature","signature","path","body","fetchJson","signatureFor","convertPKForContract","replace","a","enum","deposit","code","action","toUpperCase","substr","ConnectedWalletAccount","WalletAccount","WalletConnection","utils_1","borsh_2","LOGIN_WALLET_URL_SUFFIX","MULTISIG_HAS_METHOD","LOCAL_STORAGE_KEY_SUFFIX","PENDING_ACCESS_KEY_PREFIX","near","appKeyPrefix","_near","authDataKey","authData","window","localStorage","_networkId","config","_walletBaseUrl","walletUrl","contractName","_keyStore","keyStore","_authData","allKeys","_authDataKey","isSignedIn","_completeSignInWithAccessKey","contractIdOrOptions","title","successUrl","failureUrl","currentUrl","URL","location","href","newUrl","searchParams","set","account","KeyPair","fromRandom","setKey","forEach","append","assign","_requestSignTransactions","transactions","callbackUrl","meta","serialize","SCHEMA","serialized","get","split","_moveKeyFromTempToPermanent","delete","history","replaceState","document","keyPair","getKey","removeKey","removeItem","_connectedAccount","walletConnection","localKey","accessKeyForTransaction","createTransaction","requestSignTransactions","reject","setTimeout","allowedReceiverId","allowedMethods","accessKeyMatchesTransaction","walletKeys","getTransactionLastResult","FinalExecutionStatusBasic","JsonRpcProvider","Provider","provider_1","enumerable","json_rpc_provider_1","formatNearAmount","NEAR_NOMINATION","NEAR_NOMINATION_EXP","pow","ROUNDING_OFFSETS","BN10","i","offset","balance","fracDigits","balanceBN","roundingExp","iadd","wholeStr","substring","fractionStr","padStart","trimTrailingZeroes","formatWithCommas","amt","cleanupAmount","wholePart","fracPart","trimLeadingZeroes","padEnd","trim","pattern","test","Connection","signer_1","getProvider","getSigner","InMemorySigner","codes","populateStatusesMap","statuses","arr","message","Number","toLowerCase","TypeError","n","isNaN","module","STATUS_CODES","redirect","300","301","302","303","305","307","308","empty","204","205","304","retry","502","503","504","Assignable","Enum","properties","BrowserLocalStorageKeyStore","keystore_1","LOCAL_STORAGE_KEY_PREFIX","storageKeyForSecretKey","fromString","storageKeys","startsWith","Set","parts","KeyPairEd25519","KeyType","tweetnacl_1","serialize_1","enums_1","key_type_to_str","keyType","ED25519","str_to_key_type","encodedKey","base_decode","base_encode","sign","detached","verify","curve","secretKey","fromSecretKey","newKeyPair","InMemoryKeyStore","slice","deserialize","BorshError","BinaryWriter","BinaryReader","Class","create","Source","buildArgs","checkOption","option","Function","hasOwnProperty","index","arguments","extend","call","factory","instance","build","apply","init","Subject","prototype","constructor","clone","merge","subject","staticProperty","property","absorb","getAncestor","newInstance","http_errors_1","START_WAIT_TIME_MS","BACKOFF_MULTIPLIER","RETRY_NUMBER","connectionInfoOrUrl","json","connectionInfo","url","fetch","headers","ok","text","buffer","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","alloc","allocUnsafe","allocUnsafeSlow","size","fill","encoding","buf","SlowBuffer","ArgumentTypeError","argName","argType","argValue","transactionHash","exponentialBackoff","startWaitTime","retryNumber","waitBackoff","getResult","waitTime","sleep","millis","Signer","js_sha256_1","in_memory_key_store_1","Uint8Array","sha256","array","MergeKeyStore","keyStores","writeKeyStoreIndex","clear","network","getNetworks","getAccounts","global","objectToString","object","isFunction","typeStr","obj","escapeRegExp","string","hasProperty","propName","primitiveHasOwnProperty","primitive","regExpTest","RegExp","testRegExp","re","nonSpaceRe","isWhitespace","entityMap","escapeHtml","String","s","whiteRe","spaceRe","equalsRe","curlyRe","tagRe","parseTemplate","template","tags","openingTagRe","closingTagRe","closingCurlyRe","lineHasNonSpace","sections","tokens","spaces","hasTag","nonSpace","indentation","tagIndex","stripSpace","pop","compileTags","tagsToCompile","mustache","start","chr","token","openSection","scanner","Scanner","eos","pos","scanUntil","valueLength","charAt","scan","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","tail","Context","view","parentContext","cache","parent","Writer","templateCache","_cache","match","search","lookup","name","intermediateValue","names","lookupHit","clearCache","cacheKey","isCacheEnabled","render","partials","getConfigTags","renderTokens","originalTemplate","symbol","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","self","subRender","j","indentPartial","partial","filteredIndentation","partialByNl","indentedValue","escape","getConfigEscape","version","defaultWriter","__createBinding","o","k","k2","__setModuleDefault","v","__importStar","Near","Contract","multisig","validators","utils","providers","accountCreator","connection_1","contract_1","near_1","wallet_account_1","UrlAccountCreator","LocalAccountCreator","AccountCreator","masterAccount","initialBalance","newAccountPublicKey","rpc_errors","format","enums","web","key_pair","REQUEST_RETRY_NUMBER","REQUEST_RETRY_WAIT","REQUEST_RETRY_WAIT_BACKOFF","_nextId","sendJsonRpc","signedTransaction","bytes","encode","txStatusString","txStatusUint8Array","getErrorTypeFromErrorMessage","blockId","block_id","chunkId","sync_checkpoint","blockReference","lightClientProof","accountIdArray","changes_type","account_ids","accessKeyArray","keyPrefix","key_prefix_base64","params","jsonrpc","errorMessage","Action","SignedTransaction","Transaction","Signature","DeleteAccount","DeleteKey","AddKey","Stake","Transfer","DeployContract","CreateAccount","IAction","AccessKey","AccessKeyPermission","FullAccessPermission","FunctionCallPermission","fullAccess","signerId","signTransactionObject","Map","fields","field","formatError","ServerError","mustache_1","rpc_error_schema_json_1","error_messages_json_1","common_index_1","mustacheHelpers","formatNear","ServerTransactionError","errorObj","errorClassName","walkSubtype","schema","server_error","server_tx_error","errorData","typeName","errorTypeName","errorName","isString","isObject","prop","props","nameFunction","x","viewMethods","changeMethods","writable","ignored","_changeMethod","validateBNLike","rawResult","argMap","bnLike","isBN","browser_local_storage_key_store_1","merge_key_store_1","IdType","ExecutionStatusBasic","txResult","__exportStar","p","setProtoOf","proto","__proto__","mixinProperties","setPrototypeOf","connect","diffEpochValidators","findSeatPrice","maxNumberOfSeats","minimumStakeRatio","protocolVersion","findSeatPriceForProtocolBefore49","findSeatPriceForProtocolAfter49","numSeats","stakes","sort","b","cmp","num","stakesSum","lt","left","right","eq","mid","div","found","currentSum","gte","currentValidators","nextValidators","validatorsMap","nextValidatorsSet","newValidators","has","removedValidators","changedValidators","current","next","account_creator_1","fromConfig","nodeUrl","deps","sender","originator","receiver","sendMoney","abstractMethod"],"mappings":"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","file":"js/chunk-2094d30c.2d5a7a8d.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst transaction_1 = require(\"./transaction\");\nconst providers_1 = require(\"./providers\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst errors_1 = require(\"./utils/errors\");\nconst rpc_errors_1 = require(\"./utils/rpc_errors\");\nconst constants_1 = require(\"./constants\");\nconst exponential_backoff_1 = __importDefault(require(\"./utils/exponential-backoff\"));\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\nfunction bytesJsonStringify(input) {\n    return Buffer.from(JSON.stringify(input));\n}\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link KeyPair}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n * @hint Use {@link WalletConnection} in the browser to redirect to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for Account/key management using the {@link BrowserLocalStorageKeyStore}.\n * @see {@link https://nomicon.io/DataStructures/Account.html | Account Spec}\n */\nclass Account {\n    constructor(connection, accountId) {\n        /** @hidden */\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    /** @hidden */\n    get ready() {\n        const deprecate = depd_1.default('Account.ready()');\n        deprecate('not needed anymore, always ready');\n        return Promise.resolve();\n    }\n    async fetchState() {\n        const deprecate = depd_1.default('Account.fetchState()');\n        deprecate('use `Account.state()` instead');\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-account}\n     */\n    async state() {\n        return this.connection.provider.query({\n            request_type: 'view_account',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n    }\n    /** @hidden */\n    printLogsAndFailures(contractId, results) {\n        if (!process.env[\"NEAR_NO_LOGS\"]) {\n            for (const result of results) {\n                console.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n                this.printLogs(contractId, result.logs, '\\t');\n                if (result.failure) {\n                    console.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n                }\n            }\n        }\n    }\n    /** @hidden */\n    printLogs(contractId, logs, prefix = '') {\n        if (!process.env[\"NEAR_NO_LOGS\"]) {\n            for (const log of logs) {\n                console.log(`${prefix}Log [${contractId}]: ${log}`);\n            }\n        }\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link JsonRpcProvider.sendTransaction}\n     */\n    async signTransaction(receiverId, actions) {\n        const accessKeyInfo = await this.findAccessKey(receiverId, actions);\n        if (!accessKeyInfo) {\n            throw new providers_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`, 'KeyNotFound');\n        }\n        const { accessKey } = accessKeyInfo;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = block.header.hash;\n        const nonce = ++accessKey.nonce;\n        return await transaction_1.signTransaction(receiverId, nonce, actions, borsh_1.baseDecode(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this.signAndSendTransactionV1(args[0], args[1]);\n        }\n        else {\n            return this.signAndSendTransactionV2(args[0]);\n        }\n    }\n    signAndSendTransactionV1(receiverId, actions) {\n        const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n        deprecate('use `Account.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n        return this.signAndSendTransactionV2({ receiverId, actions });\n    }\n    async signAndSendTransactionV2({ receiverId, actions, returnError }) {\n        let txHash, signedTx;\n        // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n        const result = await exponential_backoff_1.default(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, async () => {\n            [txHash, signedTx] = await this.signTransaction(receiverId, actions);\n            const publicKey = signedTx.transaction.publicKey;\n            try {\n                return await this.connection.provider.sendTransaction(signedTx);\n            }\n            catch (error) {\n                if (error.type === 'InvalidNonce') {\n                    errors_1.logWarning(`Retrying transaction ${receiverId}:${borsh_1.baseEncode(txHash)} with new nonce.`);\n                    delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                    return null;\n                }\n                if (error.type === 'Expired') {\n                    errors_1.logWarning(`Retrying transaction ${receiverId}:${borsh_1.baseEncode(txHash)} due to expired block hash`);\n                    return null;\n                }\n                error.context = new providers_1.ErrorContext(borsh_1.baseEncode(txHash));\n                throw error;\n            }\n        });\n        if (!result) {\n            // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n            throw new providers_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n        }\n        const flatLogs = [result.transaction_outcome, ...result.receipts_outcome].reduce((acc, it) => {\n            if (it.outcome.logs.length ||\n                (typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object')) {\n                return acc.concat({\n                    'receiptIds': it.outcome.receipt_ids,\n                    'logs': it.outcome.logs,\n                    'failure': typeof it.outcome.status.Failure != 'undefined' ? rpc_errors_1.parseRpcError(it.outcome.status.Failure) : null\n                });\n            }\n            else\n                return acc;\n        }, []);\n        this.printLogsAndFailures(signedTx.transaction.receiverId, flatLogs);\n        if (!returnError && typeof result.status === 'object' && typeof result.status.Failure === 'object') {\n            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n            if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                throw new providers_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n            }\n            else {\n                throw rpc_errors_1.parseResultError(result);\n            }\n        }\n        // TODO: if Tx is Unknown or Started.\n        return result;\n    }\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link KeyStore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    async findAccessKey(receiverId, actions) {\n        // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n        const publicKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        if (!publicKey) {\n            return null;\n        }\n        const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n        if (cachedAccessKey !== undefined) {\n            return { publicKey, accessKey: cachedAccessKey };\n        }\n        try {\n            const accessKey = await this.connection.provider.query({\n                request_type: 'view_access_key',\n                account_id: this.accountId,\n                public_key: publicKey.toString(),\n                finality: 'optimistic'\n            });\n            // this function can be called multiple times and retrieve the same access key\n            // this checks to see if the access key was already retrieved and cached while\n            // the above network call was in flight. To keep nonce values in line, we return\n            // the cached access key.\n            if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n            }\n            this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n            return { publicKey, accessKey };\n        }\n        catch (e) {\n            if (e.type == 'AccessKeyDoesNotExist') {\n                return null;\n            }\n            throw e;\n        }\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     * @param amount of NEAR to transfer to the created contract account. Transfer enough to pay for storage https://docs.near.org/docs/concepts/storage-staking\n     */\n    async createAndDeployContract(contractId, publicKey, data, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        await this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey), transaction_1.deployContract(data)]\n        });\n        const contractAccount = new Account(this.connection, contractId);\n        return contractAccount;\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    async sendMoney(receiverId, amount) {\n        return this.signAndSendTransaction({\n            receiverId,\n            actions: [transaction_1.transfer(amount)]\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    async createAccount(newAccountId, publicKey, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        return this.signAndSendTransaction({\n            receiverId: newAccountId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    async deleteAccount(beneficiaryId) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteAccount(beneficiaryId)]\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    async deployContract(data) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deployContract(data)]\n        });\n    }\n    async functionCall(...args) {\n        if (typeof args[0] === 'string') {\n            return this.functionCallV1(args[0], args[1], args[2], args[3], args[4]);\n        }\n        else {\n            return this.functionCallV2(args[0]);\n        }\n    }\n    functionCallV1(contractId, methodName, args, gas, amount) {\n        const deprecate = depd_1.default('Account.functionCall(contractId, methodName, args, gas, amount)');\n        deprecate('use `Account.functionCall(FunctionCallOptions)` instead');\n        args = args || {};\n        this.validateArgs(args);\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas || constants_1.DEFAULT_FUNCTION_CALL_GAS, amount)]\n        });\n    }\n    functionCallV2({ contractId, methodName, args = {}, gas = constants_1.DEFAULT_FUNCTION_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl, stringify }) {\n        this.validateArgs(args);\n        const stringifyArg = stringify === undefined ? transaction_1.stringifyJsonOrBytes : stringify;\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas, attachedDeposit, stringifyArg)],\n            walletMeta,\n            walletCallbackUrl\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/concepts/account#access-keys}\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    async addKey(publicKey, contractId, methodNames, amount) {\n        if (!methodNames) {\n            methodNames = [];\n        }\n        if (!Array.isArray(methodNames)) {\n            methodNames = [methodNames];\n        }\n        let accessKey;\n        if (!contractId) {\n            accessKey = transaction_1.fullAccessKey();\n        }\n        else {\n            accessKey = transaction_1.functionCallAccessKey(contractId, methodNames, amount);\n        }\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async deleteKey(publicKey) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteKey(key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/validator/staking-overview}\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    async stake(publicKey, amount) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.stake(amount, key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new errors_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#call-a-contract-function}\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param args Any arguments to the view contract method, wrapped in JSON\n     * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n     * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n     * @returns {Promise<any>}\n     */\n    async viewFunction(contractId, methodName, args = {}, { parse = parseJsonFromRawResponse, stringify = bytesJsonStringify } = {}) {\n        this.validateArgs(args);\n        const serializedArgs = stringify(args).toString('base64');\n        const result = await this.connection.provider.query({\n            request_type: 'call_function',\n            account_id: contractId,\n            method_name: methodName,\n            args_base64: serializedArgs,\n            finality: 'optimistic'\n        });\n        if (result.logs) {\n            this.printLogs(contractId, result.logs);\n        }\n        return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-contract-state}\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    async viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        const { values } = await this.connection.provider.query({\n            request_type: 'view_state',\n            ...blockQuery,\n            account_id: this.accountId,\n            prefix_base64: Buffer.from(prefix).toString('base64')\n        });\n        return values.map(({ key, value }) => ({\n            key: Buffer.from(key, 'base64'),\n            value: Buffer.from(value, 'base64')\n        }));\n    }\n    /**\n     * Get all access keys for the account\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-access-key-list}\n     */\n    async getAccessKeys() {\n        const response = await this.connection.provider.query({\n            request_type: 'view_access_key_list',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n        // A breaking API change introduced extra information into the\n        // response, so it now returns an object with a `keys` field instead\n        // of an array: https://github.com/nearprotocol/nearcore/pull/1789\n        if (Array.isArray(response)) {\n            return response;\n        }\n        return response.keys;\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    async getAccountDetails() {\n        // TODO: update the response value to return all the different keys, not just app keys.\n        // Also if we need this function, or getAccessKeys is good enough.\n        const accessKeys = await this.getAccessKeys();\n        const authorizedApps = accessKeys\n            .filter(item => item.access_key.permission !== 'FullAccess')\n            .map(item => {\n            const perm = item.access_key.permission;\n            return {\n                contractId: perm.FunctionCall.receiver_id,\n                amount: perm.FunctionCall.allowance,\n                publicKey: item.public_key,\n            };\n        });\n        return { authorizedApps };\n    }\n    /**\n     * Returns calculated account balance\n     */\n    async getAccountBalance() {\n        const protocolConfig = await this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n        const state = await this.state();\n        const costPerByte = new bn_js_1.default(protocolConfig.runtime_config.storage_amount_per_byte);\n        const stateStaked = new bn_js_1.default(state.storage_usage).mul(costPerByte);\n        const staked = new bn_js_1.default(state.locked);\n        const totalBalance = new bn_js_1.default(state.amount).add(staked);\n        const availableBalance = totalBalance.sub(bn_js_1.default.max(staked, stateStaked));\n        return {\n            total: totalBalance.toString(),\n            stateStaked: stateStaked.toString(),\n            staked: staked.toString(),\n            available: availableBalance.toString()\n        };\n    }\n}\nexports.Account = Account;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link Near} via {@link NearConfig}\n * and are used by the {@link InMemorySigner} to sign transactions.\n *\n * @example {@link connect}\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n","'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account2FA = exports.AccountMultisig = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst account_1 = require(\"./account\");\nconst format_1 = require(\"./utils/format\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst transaction_1 = require(\"./transaction\");\nconst web_1 = require(\"./utils/web\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = new bn_js_1.default(format_1.parseNearAmount('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = new bn_js_1.default('100000000000000');\nexports.MULTISIG_DEPOSIT = new bn_js_1.default('0');\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [exports.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    async signAndSendTransactionWithAccount(receiverId, actions) {\n        return super.signAndSendTransaction({ receiverId, actions });\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this._signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        return this._signAndSendTransaction(args[0]);\n    }\n    async _signAndSendTransaction({ receiverId, actions }) {\n        const { accountId } = this;\n        const args = Buffer.from(JSON.stringify({\n            request: {\n                receiver_id: receiverId,\n                actions: convertActions(actions, accountId, receiverId)\n            }\n        }));\n        let result;\n        try {\n            result = await super.signAndSendTransaction({\n                receiverId: accountId,\n                actions: [\n                    transaction_1.functionCall('add_request_and_confirm', args, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)\n                ]\n            });\n        }\n        catch (e) {\n            if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                await this.deleteUnconfirmedRequests();\n                return await this.signAndSendTransaction(receiverId, actions);\n            }\n            throw e;\n        }\n        // TODO: Are following even needed? Seems like it throws on error already\n        if (!result.status) {\n            throw new Error('Request failed');\n        }\n        const status = { ...result.status };\n        if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n            throw new Error('Request failed');\n        }\n        this.setRequest({\n            accountId,\n            actions,\n            requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n        });\n        if (this.onAddRequestResult) {\n            await this.onAddRequestResult(result);\n        }\n        // NOTE there is no await on purpose to avoid blocking for 2fa\n        this.deleteUnconfirmedRequests();\n        return result;\n    }\n    async deleteUnconfirmedRequests() {\n        // TODO: Delete in batch, don't delete unexpired\n        // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n        const request_ids = await this.getRequestIds();\n        const { requestId } = this.getRequest();\n        for (const requestIdToDelete of request_ids) {\n            if (requestIdToDelete == requestId) {\n                continue;\n            }\n            try {\n                await super.signAndSendTransaction({\n                    receiverId: this.accountId,\n                    actions: [transaction_1.functionCall('delete_request', { request_id: requestIdToDelete }, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)]\n                });\n            }\n            catch (e) {\n                console.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n            }\n        }\n    }\n    // helpers\n    async getRequestIds() {\n        // TODO: Read requests from state to allow filtering by expiration time\n        // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n        return this.viewFunction(this.accountId, 'list_request_ids');\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(exports.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[exports.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(exports.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[exports.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nclass Account2FA extends AccountMultisig {\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = 'https://helper.testnet.near.org';\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    async signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n            deprecate('use `Account2FA.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n            return this.__signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        else {\n            return this.__signAndSendTransaction(args[0]);\n        }\n    }\n    async __signAndSendTransaction({ receiverId, actions }) {\n        await super.signAndSendTransaction({ receiverId, actions });\n        // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n        await this.sendCode();\n        const result = await this.promptAndVerify();\n        if (this.onConfirmResult) {\n            await this.onConfirmResult(result);\n        }\n        return result;\n    }\n    // default helpers for CH deployments of multisig\n    async deployMultisig(contractBytes) {\n        const { accountId } = this;\n        const seedOrLedgerKey = (await this.getRecoveryMethods()).data\n            .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n            .map((rm) => rm.publicKey);\n        const fak2lak = (await this.getAccessKeys())\n            .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n            .map((ak) => ak.public_key)\n            .map(toPK);\n        const confirmOnlyKey = toPK((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n        const actions = [\n            ...fak2lak.map((pk) => transaction_1.deleteKey(pk)),\n            ...fak2lak.map((pk) => transaction_1.addKey(pk, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CHANGE_METHODS, null))),\n            transaction_1.addKey(confirmOnlyKey, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CONFIRM_METHODS, null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        if ((await this.state()).code_hash === '11111111111111111111111111111111') {\n            actions.push(transaction_1.functionCall('new', newArgs, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT));\n        }\n        console.log('deploying multisig contract for', accountId);\n        return await super.signAndSendTransactionWithAccount(accountId, actions);\n    }\n    async disable(contractBytes) {\n        const { accountId } = this;\n        const accessKeys = await this.getAccessKeys();\n        const lak2fak = accessKeys\n            .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n            .filter(({ access_key }) => {\n            const perm = access_key.permission.FunctionCall;\n            return perm.receiver_id === accountId &&\n                perm.method_names.length === 4 &&\n                perm.method_names.includes('add_request_and_confirm');\n        });\n        const confirmOnlyKey = key_pair_1.PublicKey.from((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const actions = [\n            transaction_1.deleteKey(confirmOnlyKey),\n            ...lak2fak.map(({ public_key }) => transaction_1.deleteKey(key_pair_1.PublicKey.from(public_key))),\n            ...lak2fak.map(({ public_key }) => transaction_1.addKey(key_pair_1.PublicKey.from(public_key), null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        console.log('disabling 2fa for', accountId);\n        return await this.signAndSendTransaction({\n            receiverId: accountId,\n            actions\n        });\n    }\n    async sendCodeDefault() {\n        const { accountId } = this;\n        const { requestId } = this.getRequest();\n        const method = await this.get2faMethod();\n        await this.postSignedJson('/2fa/send', {\n            accountId,\n            method,\n            requestId,\n        });\n        return requestId;\n    }\n    async getCodeDefault(method) {\n        throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n    }\n    async promptAndVerify() {\n        const method = await this.get2faMethod();\n        const securityCode = await this.getCode(method);\n        try {\n            const result = await this.verifyCode(securityCode);\n            // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n            return result;\n        }\n        catch (e) {\n            console.warn('Error validating security code:', e);\n            if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                return await this.promptAndVerify();\n            }\n            throw e;\n        }\n    }\n    async verifyCodeDefault(securityCode) {\n        const { accountId } = this;\n        const request = this.getRequest();\n        if (!request) {\n            throw new Error('no request pending');\n        }\n        const { requestId } = request;\n        return await this.postSignedJson('/2fa/verify', {\n            accountId,\n            securityCode,\n            requestId\n        });\n    }\n    async getRecoveryMethods() {\n        const { accountId } = this;\n        return {\n            accountId,\n            data: await this.postSignedJson('/account/recoveryMethods', { accountId })\n        };\n    }\n    async get2faMethod() {\n        let { data } = await this.getRecoveryMethods();\n        if (data && data.length) {\n            data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n        }\n        if (!data)\n            return null;\n        const { kind, detail } = data;\n        return { kind, detail };\n    }\n    async signatureFor() {\n        const { accountId } = this;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockNumber = block.header.height.toString();\n        const signed = await this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n        const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n        return { blockNumber, blockNumberSignature };\n    }\n    async postSignedJson(path, body) {\n        return await web_1.fetchJson(this.helperUrl + path, JSON.stringify({\n            ...body,\n            ...(await this.signatureFor())\n        }));\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => key_pair_1.PublicKey.from(pk);\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: exports.MULTISIG_ALLOWANCE.toString(),\n                method_names: exports.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectedWalletAccount = exports.WalletAccount = exports.WalletConnection = void 0;\n/**\n * The classes in this module are used in conjunction with the {@link BrowserLocalStorageKeyStore}. This module exposes two classes:\n * * {@link WalletConnection} which redirects users to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for key management.\n * * {@link ConnectedWalletAccount} is an {@link Account} implementation that uses {@link WalletConnection} to get keys\n *\n * @module walletAccount\n */\nconst depd_1 = __importDefault(require(\"depd\"));\nconst account_1 = require(\"./account\");\nconst transaction_1 = require(\"./transaction\");\nconst utils_1 = require(\"./utils\");\nconst borsh_1 = require(\"borsh\");\nconst borsh_2 = require(\"borsh\");\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\n/**\n * This class is used in conjunction with the {@link BrowserLocalStorageKeyStore}.\n * It redirects users to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for key management.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#wallet}\n * @example\n * ```js\n * // create new WalletConnection instance\n * const wallet = new WalletConnection(near, 'my-app');\n *\n * // If not signed in redirect to the NEAR wallet to sign in\n * // keys will be stored in the BrowserLocalStorageKeyStore\n * if(!wallet.isSingnedIn()) return wallet.requestSignIn()\n * ```\n */\nclass WalletConnection {\n    constructor(near, appKeyPrefix) {\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletAccount is authorized with the wallet.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.isSignedIn();\n     * ```\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.getAccountId();\n     * ```\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param options An optional options object\n     * @param options.contractId The NEAR account where the contract is deployed\n     * @param options.successUrl URL to redirect upon success. Default: current url\n     * @param options.failureUrl URL to redirect upon failure. Default: current url\n     *\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * // redirects to the NEAR Wallet\n     * wallet.requestSignIn({ contractId: 'account-with-deploy-contract.near' });\n     * ```\n     */\n    async requestSignIn(contractIdOrOptions = {}, title, successUrl, failureUrl) {\n        let options;\n        if (typeof contractIdOrOptions === 'string') {\n            const deprecate = depd_1.default('requestSignIn(contractId, title)');\n            deprecate('`title` ignored; use `requestSignIn({ contractId, methodNames, successUrl, failureUrl })` instead');\n            options = { contractId: contractIdOrOptions, successUrl, failureUrl };\n        }\n        else {\n            options = contractIdOrOptions;\n        }\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n        newUrl.searchParams.set('success_url', options.successUrl || currentUrl.href);\n        newUrl.searchParams.set('failure_url', options.failureUrl || currentUrl.href);\n        if (options.contractId) {\n            /* Throws exception if contract account does not exist */\n            const contractAccount = await this._near.account(options.contractId);\n            await contractAccount.state();\n            newUrl.searchParams.set('contract_id', options.contractId);\n            const accessKey = utils_1.KeyPair.fromRandom('ed25519');\n            newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n            await this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n        }\n        if (options.methodNames) {\n            options.methodNames.forEach(methodName => {\n                newUrl.searchParams.append('methodNames', methodName);\n            });\n        }\n        window.location.assign(newUrl.toString());\n    }\n    async requestSignTransactions(...args) {\n        if (Array.isArray(args[0])) {\n            const deprecate = depd_1.default('WalletConnection.requestSignTransactions(transactions, callbackUrl, meta)');\n            deprecate('use `WalletConnection.requestSignTransactions(RequestSignTransactionsOptions)` instead');\n            return this._requestSignTransactions({\n                transactions: args[0],\n                callbackUrl: args[1],\n                meta: args[2]\n            });\n        }\n        return this._requestSignTransactions(args[0]);\n    }\n    async _requestSignTransactions({ transactions, meta, callbackUrl }) {\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL('sign', this._walletBaseUrl);\n        newUrl.searchParams.set('transactions', transactions\n            .map(transaction => borsh_2.serialize(transaction_1.SCHEMA, transaction))\n            .map(serialized => Buffer.from(serialized).toString('base64'))\n            .join(','));\n        newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n        if (meta)\n            newUrl.searchParams.set('meta', meta);\n        window.location.assign(newUrl.toString());\n    }\n    /**\n     * @hidden\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    async _completeSignInWithAccessKey() {\n        const currentUrl = new URL(window.location.href);\n        const publicKey = currentUrl.searchParams.get('public_key') || '';\n        const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n        const accountId = currentUrl.searchParams.get('account_id') || '';\n        // TODO: Handle errors during login\n        if (accountId) {\n            this._authData = {\n                accountId,\n                allKeys\n            };\n            window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));\n            if (publicKey) {\n                await this._moveKeyFromTempToPermanent(accountId, publicKey);\n            }\n        }\n        currentUrl.searchParams.delete('public_key');\n        currentUrl.searchParams.delete('all_keys');\n        currentUrl.searchParams.delete('account_id');\n        currentUrl.searchParams.delete('meta');\n        currentUrl.searchParams.delete('transactionHashes');\n        window.history.replaceState({}, document.title, currentUrl.toString());\n    }\n    /**\n     * @hidden\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    async _moveKeyFromTempToPermanent(accountId, publicKey) {\n        const keyPair = await this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        await this._keyStore.setKey(this._networkId, accountId, keyPair);\n        await this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletAccount.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexports.WalletConnection = WalletConnection;\nexports.WalletAccount = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using {@link WalletConnection} when no local key is available.\n */\nclass ConnectedWalletAccount extends account_1.Account {\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    /**\n     * Sign a transaction by redirecting to the NEAR Wallet\n     * @see {@link WalletConnection.requestSignTransactions}\n     */\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this._signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        return this._signAndSendTransaction(args[0]);\n    }\n    async _signAndSendTransaction({ receiverId, actions, walletMeta, walletCallbackUrl = window.location.href }) {\n        const localKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        let accessKey = await this.accessKeyForTransaction(receiverId, actions, localKey);\n        if (!accessKey) {\n            throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n        }\n        if (localKey && localKey.toString() === accessKey.public_key) {\n            try {\n                return await super.signAndSendTransaction({ receiverId, actions });\n            }\n            catch (e) {\n                if (e.type === 'NotEnoughAllowance') {\n                    accessKey = await this.accessKeyForTransaction(receiverId, actions);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = borsh_1.baseDecode(block.header.hash);\n        const publicKey = utils_1.PublicKey.from(accessKey.public_key);\n        // TODO: Cache & listen for nonce updates for given access key\n        const nonce = accessKey.access_key.nonce + 1;\n        const transaction = transaction_1.createTransaction(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n        await this.walletConnection.requestSignTransactions({\n            transactions: [transaction],\n            meta: walletMeta,\n            callbackUrl: walletCallbackUrl\n        });\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                reject(new Error('Failed to redirect to sign transaction'));\n            }, 1000);\n        });\n        // TODO: Aggregate multiple transaction request with \"debounce\".\n        // TODO: Introduce TrasactionQueue which also can be used to watch for status?\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of {access_key: AccessKey, public_key: PublicKey} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    async accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        const { access_key: { permission } } = accessKey;\n        if (permission === 'FullAccess') {\n            return true;\n        }\n        if (permission.FunctionCall) {\n            const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n            /********************************\n            Accept multisig access keys and let wallets attempt to signAndSendTransaction\n            If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n            ********************************/\n            if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                return true;\n            }\n            if (allowedReceiverId === receiverId) {\n                if (actions.length !== 1) {\n                    return false;\n                }\n                const [{ functionCall }] = actions;\n                return functionCall &&\n                    (!functionCall.deposit || functionCall.deposit.toString() === '0') && // TODO: Should support charging amount smaller than allowance?\n                    (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                // TODO: Handle cases when allowance doesn't have enough to pay for gas\n            }\n        }\n        // TODO: Support other permissions than FunctionCall\n        return false;\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     * @returns Promise<any>\n     */\n    async accessKeyForTransaction(receiverId, actions, localKey) {\n        const accessKeys = await this.getAccessKeys();\n        if (localKey) {\n            const accessKey = accessKeys.find(key => key.public_key.toString() === localKey.toString());\n            if (accessKey && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) {\n                return accessKey;\n            }\n        }\n        const walletKeys = this.walletConnection._authData.allKeys;\n        for (const accessKey of accessKeys) {\n            if (walletKeys.indexOf(accessKey.public_key) !== -1 && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) {\n                return accessKey;\n            }\n        }\n        return null;\n    }\n}\nexports.ConnectedWalletAccount = ConnectedWalletAccount;\n","\"use strict\";\n/** @hidden @module */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorContext = exports.TypedError = exports.getTransactionLastResult = exports.FinalExecutionStatusBasic = exports.JsonRpcProvider = exports.Provider = void 0;\nconst provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return provider_1.Provider; } });\nObject.defineProperty(exports, \"getTransactionLastResult\", { enumerable: true, get: function () { return provider_1.getTransactionLastResult; } });\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", { enumerable: true, get: function () { return provider_1.FinalExecutionStatusBasic; } });\nconst json_rpc_provider_1 = require(\"./json-rpc-provider\");\nObject.defineProperty(exports, \"JsonRpcProvider\", { enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } });\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return json_rpc_provider_1.TypedError; } });\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return json_rpc_provider_1.ErrorContext; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = new bn_js_1.default('10', 10).pow(new bn_js_1.default(exports.NEAR_NOMINATION_EXP, 10));\n// Pre-calculate offests used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = new bn_js_1.default(10);\nfor (let i = 0, offset = new bn_js_1.default(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset.mul(BN10)) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    const balanceBN = new bn_js_1.default(balance, 10);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN.iadd(ROUNDING_OFFSETS[roundingExp]);\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || '0';\n    const fractionStr = balance.substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, '0').substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split('.');\n    const wholePart = split[0];\n    const fracPart = split[1] || '';\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, '0'));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, '').trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, '');\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, '');\n    if (value === '') {\n        return '0';\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, '$1,$2');\n    }\n    return value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst providers_1 = require(\"./providers\");\nconst signer_1 = require(\"./signer\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider({ ...config.args });\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signer_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    constructor(networkId, provider, signer) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer);\n    }\n}\nexports.Connection = Connection;\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.STATUS_CODES = codes\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Assignable = exports.Enum = void 0;\n/** @hidden @module */\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexports.Enum = Enum;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserLocalStorageKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nconst key_pair_1 = require(\"../utils/key_pair\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass BrowserLocalStorageKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Stores a {@link KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n    }\n    /**\n     * Gets a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n        if (!value) {\n            return null;\n        }\n        return key_pair_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    async clear() {\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                this.localStorage.removeItem(key);\n            }\n        }\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                result.add(parts[1]);\n            }\n        }\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId) {\n                    result.push(parts[0]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.KeyType = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst serialize_1 = require(\"./serialize\");\nconst enums_1 = require(\"./enums\");\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case KeyType.ED25519: return 'ed25519';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return KeyType.ED25519;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends enums_1.Assignable {\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new PublicKey({ keyType: KeyType.ED25519, data: serialize_1.base_decode(parts[0]) });\n        }\n        else if (parts.length === 2) {\n            return new PublicKey({ keyType: str_to_key_type(parts[0]), data: serialize_1.base_decode(parts[1]) });\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n    toString() {\n        return `${key_type_to_str(this.keyType)}:${serialize_1.base_encode(this.data)}`;\n    }\n    verify(message, signature) {\n        switch (this.keyType) {\n            case KeyType.ED25519: return tweetnacl_1.default.sign.detached.verify(message, signature, this.data);\n            default: throw new Error(`Unknown key type ${this.keyType}`);\n        }\n    }\n}\nexports.PublicKey = PublicKey;\nclass KeyPair {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return KeyPairEd25519.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new KeyPairEd25519(parts[0]);\n        }\n        else if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new KeyPairEd25519(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends KeyPair {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} secretKey\n     */\n    constructor(secretKey) {\n        super();\n        const keyPair = tweetnacl_1.default.sign.keyPair.fromSecretKey(serialize_1.base_decode(secretKey));\n        this.publicKey = new PublicKey({ keyType: KeyType.ED25519, data: keyPair.publicKey });\n        this.secretKey = secretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const newKeyPair = tweetnacl_1.default.sign.keyPair();\n        return new KeyPairEd25519(serialize_1.base_encode(newKeyPair.secretKey));\n    }\n    sign(message) {\n        const signature = tweetnacl_1.default.sign.detached(message, serialize_1.base_decode(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `ed25519:${this.secretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nconst key_pair_1 = require(\"../utils/key_pair\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.keys[`${accountId}:${networkId}`];\n        if (!value) {\n            return null;\n        }\n        return key_pair_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        delete this.keys[`${accountId}:${networkId}`];\n    }\n    /**\n     * Removes all {@link KeyPairs} from in-memory storage\n     */\n    async clear() {\n        this.keys = {};\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            result.add(parts[1]);\n        });\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            if (parts[parts.length - 1] === networkId) {\n                result.push(parts.slice(0, parts.length - 1).join(':'));\n            }\n        });\n        return result;\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar borsh_1 = require(\"borsh\");\nObject.defineProperty(exports, \"base_encode\", { enumerable: true, get: function () { return borsh_1.baseEncode; } });\nObject.defineProperty(exports, \"base_decode\", { enumerable: true, get: function () { return borsh_1.baseDecode; } });\nObject.defineProperty(exports, \"serialize\", { enumerable: true, get: function () { return borsh_1.serialize; } });\nObject.defineProperty(exports, \"deserialize\", { enumerable: true, get: function () { return borsh_1.deserialize; } });\nObject.defineProperty(exports, \"BorshError\", { enumerable: true, get: function () { return borsh_1.BorshError; } });\nObject.defineProperty(exports, \"BinaryWriter\", { enumerable: true, get: function () { return borsh_1.BinaryWriter; } });\nObject.defineProperty(exports, \"BinaryReader\", { enumerable: true, get: function () { return borsh_1.BinaryReader; } });\n","var Class = function () {\r\n    var options = Object.create({\r\n        Source: Object,\r\n        config: {},\r\n        buildArgs: []\r\n    });\r\n\r\n    function checkOption(option) {\r\n        var key = \"config\";\r\n        if (option instanceof Function)\r\n            key = \"Source\";\r\n        else if (option instanceof Array)\r\n            key = \"buildArgs\";\r\n        else if (option instanceof Object)\r\n            key = \"config\";\r\n        else\r\n            throw new Error(\"Invalid configuration option.\");\r\n        if (options.hasOwnProperty(key))\r\n            throw new Error(\"Duplicated configuration option: \" + key + \".\");\r\n        options[key] = option;\r\n    }\r\n\r\n    for (var index = 0, length = arguments.length; index < length; ++index)\r\n        checkOption(arguments[index]);\r\n\r\n    var Source = options.Source,\r\n        config = options.config,\r\n        buildArgs = options.buildArgs;\r\n\r\n    return (Source.extend || Class.extend).call(Source, config, buildArgs);\r\n};\r\n\r\nClass.factory = function () {\r\n    var Source = this;\r\n    return function () {\r\n        var instance = this;\r\n        if (instance.build instanceof Function)\r\n            instance.build.apply(instance, arguments);\r\n        if (instance.init instanceof Function)\r\n            instance.init.apply(instance, arguments);\r\n    };\r\n};\r\n\r\nClass.extend = function (config, buildArgs) {\r\n    var Source = this;\r\n    if (!config)\r\n        config = {};\r\n    var Subject;\r\n    if ((config.prototype instanceof Object) && config.prototype.constructor !== Object)\r\n        Subject = config.prototype.constructor;\r\n    else if (config.factory instanceof Function)\r\n        Subject = config.factory.call(Source);\r\n    Subject = (Source.clone || Class.clone).call(Source, Subject, buildArgs);\r\n    (Subject.merge || Class.merge).call(Subject, config);\r\n    return Subject;\r\n};\r\n\r\nClass.prototype.extend = function (config, buildArgs) {\r\n    var subject = this;\r\n    var instance = (subject.clone || Class.prototype.clone).apply(subject, buildArgs);\r\n    (instance.merge || Class.prototype.merge).call(instance, config);\r\n    return instance;\r\n};\r\n\r\nClass.clone = function (Subject, buildArgs) {\r\n    var Source = this;\r\n    if (!(Subject instanceof Function))\r\n        Subject = (Source.factory || Class.factory).call(Source);\r\n    Subject.prototype = (Source.prototype.clone || Class.prototype.clone).apply(Source.prototype, buildArgs || []);\r\n    Subject.prototype.constructor = Subject;\r\n    for (var staticProperty in Source)\r\n        if (staticProperty !== \"prototype\")\r\n            Subject[staticProperty] = Source[staticProperty];\r\n    return Subject;\r\n};\r\n\r\nClass.prototype.clone = function () {\r\n    var subject = this;\r\n    var instance = Object.create(subject);\r\n    if (instance.build instanceof Function)\r\n        instance.build.apply(instance, arguments);\r\n    return instance;\r\n};\r\n\r\nClass.merge = function (config) {\r\n    var Subject = this;\r\n    for (var staticProperty in config)\r\n        if (staticProperty !== \"prototype\")\r\n            Subject[staticProperty] = config[staticProperty];\r\n    if (config.prototype instanceof Object)\r\n        (Subject.prototype.merge || Class.prototype.merge).call(Subject.prototype, config.prototype);\r\n    return Subject;\r\n};\r\n\r\nClass.prototype.merge = function (config) {\r\n    var subject = this;\r\n    for (var property in config)\r\n        if (property !== \"constructor\")\r\n            subject[property] = config[property];\r\n    return subject;\r\n};\r\n\r\nClass.absorb = function (config) {\r\n    var Subject = this;\r\n    for (var staticProperty in config)\r\n        if (staticProperty !== \"prototype\" && (Subject[staticProperty] === undefined || Subject[staticProperty] === Function.prototype[staticProperty]))\r\n            Subject[staticProperty] = config[staticProperty];\r\n    if (config.prototype instanceof Object)\r\n        (Subject.prototype.absorb || Class.prototype.absorb).call(Subject.prototype, config.prototype);\r\n    return Subject;\r\n};\r\n\r\nClass.prototype.absorb = function (config) {\r\n    var subject = this;\r\n    for (var property in config)\r\n        if (property !== \"constructor\" && (subject[property] === undefined || subject[property] === Object.prototype[property]))\r\n            subject[property] = config[property];\r\n    return subject;\r\n};\r\n\r\nClass.getAncestor = function () {\r\n    var Source = this;\r\n    if (Source !== Source.prototype.constructor)\r\n        return Source.prototype.constructor;\r\n};\r\n\r\nClass.newInstance = function () {\r\n    var Subject = this;\r\n    var instance = Object.create(this.prototype);\r\n    Subject.apply(instance, arguments);\r\n    return instance;\r\n};\r\n\r\nmodule.exports = Class;","require(\"capability/es5\");\r\n\r\nmodule.exports = require(\"./lib\");","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchJson = void 0;\nconst http_errors_1 = __importDefault(require(\"http-errors\"));\nconst exponential_backoff_1 = __importDefault(require(\"./exponential-backoff\"));\nconst providers_1 = require(\"../providers\");\nconst errors_1 = require(\"./errors\");\nconst START_WAIT_TIME_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.5;\nconst RETRY_NUMBER = 10;\nasync function fetchJson(connectionInfoOrUrl, json) {\n    let connectionInfo = { url: null };\n    if (typeof (connectionInfoOrUrl) === 'string') {\n        connectionInfo.url = connectionInfoOrUrl;\n    }\n    else {\n        connectionInfo = connectionInfoOrUrl;\n    }\n    const response = await exponential_backoff_1.default(START_WAIT_TIME_MS, RETRY_NUMBER, BACKOFF_MULTIPLIER, async () => {\n        try {\n            const response = await fetch(connectionInfo.url, {\n                method: json ? 'POST' : 'GET',\n                body: json ? json : undefined,\n                headers: { ...connectionInfo.headers, 'Content-Type': 'application/json' }\n            });\n            if (!response.ok) {\n                if (response.status === 503) {\n                    errors_1.logWarning(`Retrying HTTP request for ${connectionInfo.url} as it's not available now`);\n                    return null;\n                }\n                throw http_errors_1.default(response.status, await response.text());\n            }\n            return response;\n        }\n        catch (error) {\n            if (error.toString().includes('FetchError') || error.toString().includes('Failed to fetch')) {\n                errors_1.logWarning(`Retrying HTTP request for ${connectionInfo.url} because of error: ${error}`);\n                return null;\n            }\n            throw error;\n        }\n    });\n    if (!response) {\n        throw new providers_1.TypedError(`Exceeded ${RETRY_NUMBER} attempts for ${connectionInfo.url}.`, 'RetriesExceeded');\n    }\n    return await response.json();\n}\nexports.fetchJson = fetchJson;\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logWarning = exports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\nfunction logWarning(...args) {\n    if (!process.env['NEAR_NO_LOGS']) {\n        console.warn(...args);\n    }\n}\nexports.logWarning = logWarning;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nasync function exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {\n    // TODO: jitter?\n    let waitTime = startWaitTime;\n    for (let i = 0; i < retryNumber; i++) {\n        const result = await getResult();\n        if (result) {\n            return result;\n        }\n        await sleep(waitTime);\n        waitTime *= waitBackoff;\n    }\n    return null;\n}\nexports.default = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemorySigner = exports.Signer = void 0;\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst in_memory_key_store_1 = require(\"./key_stores/in_memory_key_store\");\n/**\n * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.\n */\nclass Signer {\n}\nexports.Signer = Signer;\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends Signer {\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static async fromKeyPair(networkId, accountId, keyPair) {\n        const keyStore = new in_memory_key_store_1.InMemoryKeyStore();\n        await keyStore.setKey(networkId, accountId, keyPair);\n        return new InMemorySigner(keyStore);\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    async createKey(accountId, networkId) {\n        const keyPair = key_pair_1.KeyPair.fromRandom('ed25519');\n        await this.keyStore.setKey(networkId, accountId, keyPair);\n        return keyPair.getPublicKey();\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    async getPublicKey(accountId, networkId) {\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            return null;\n        }\n        return keyPair.getPublicKey();\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    async signMessage(message, accountId, networkId) {\n        const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n        if (!accountId) {\n            throw new Error('InMemorySigner requires provided account id');\n        }\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            throw new Error(`Key for ${accountId} not found in ${networkId}`);\n        }\n        return keyPair.sign(hash);\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPain} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        await this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            const keyPair = await keyStore.getKey(networkId, accountId);\n            if (keyPair) {\n                return keyPair;\n            }\n        }\n        return null;\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            await keyStore.removeKey(networkId, accountId);\n        }\n    }\n    /**\n     * Removes all items from each key store\n     */\n    async clear() {\n        for (const keyStore of this.keyStores) {\n            await keyStore.clear();\n        }\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const network of await keyStore.getNetworks()) {\n                result.add(network);\n            }\n        }\n        return Array.from(result);\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const account of await keyStore.getAccounts(networkId)) {\n                result.add(account);\n            }\n        }\n        return Array.from(result);\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Mustache = factory());\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.templateCache = {\n      _cache: {},\n      set: function set (key, value) {\n        this._cache[key] = value;\n      },\n      get: function get (key) {\n        return this._cache[key];\n      },\n      clear: function clear () {\n        this._cache = {};\n      }\n    };\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    if (typeof this.templateCache !== 'undefined') {\n      this.templateCache.clear();\n    }\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.templateCache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var isCacheEnabled = typeof cache !== 'undefined';\n    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n    if (tokens == undefined) {\n      tokens = parseTemplate(template, tags);\n      isCacheEnabled && cache.set(cacheKey, tokens);\n    }\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `config` argument is given here, then it should be an\n   * object with a `tags` attribute or an `escape` attribute or both.\n   * If an array is passed, then it will be interpreted the same way as\n   * a `tags` attribute on a `config` object.\n   *\n   * The `tags` attribute of a `config` object must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   *\n   * The `escape` attribute of a `config` object must be a function which\n   * accepts a string as input and outputs a safely escaped string.\n   * If an `escape` function is not provided, then an HTML-safe string\n   * escaping function is used as the default.\n   */\n  Writer.prototype.render = function render (template, view, partials, config) {\n    var tags = this.getConfigTags(config);\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, config);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context, config);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials, config);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate, config);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, config) {\n    if (!partials) return;\n    var tags = this.getConfigTags(config);\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      var tokens = this.parse(indentedValue, tags);\n      return this.renderTokens(tokens, context, partials, indentedValue, config);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context, config) {\n    var escape = this.getConfigEscape(config) || mustache.escape;\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  Writer.prototype.getConfigTags = function getConfigTags (config) {\n    if (isArray(config)) {\n      return config;\n    }\n    else if (config && typeof config === 'object') {\n      return config.tags;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  Writer.prototype.getConfigEscape = function getConfigEscape (config) {\n    if (config && typeof config === 'object' && !isArray(config)) {\n      return config.escape;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '4.2.0',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined,\n    /**\n     * Allows a user to override the default caching strategy, by providing an\n     * object with set, get and clear methods. This can also be used to disable\n     * the cache by setting it to the literal `undefined`.\n     */\n    set templateCache (cache) {\n      defaultWriter.templateCache = cache;\n    },\n    /**\n     * Gets the default or overridden caching object from the default writer.\n     */\n    get templateCache () {\n      return defaultWriter.templateCache;\n    }\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view`, `partials`, and `config`\n   * using the default writer.\n   */\n  mustache.render = function render (template, view, partials, config) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, config);\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnection = exports.WalletAccount = exports.ConnectedWalletAccount = exports.Near = exports.KeyPair = exports.Signer = exports.InMemorySigner = exports.Contract = exports.Connection = exports.Account = exports.multisig = exports.validators = exports.transactions = exports.utils = exports.providers = exports.accountCreator = void 0;\n/** @hidden @module */\nconst providers = __importStar(require(\"./providers\"));\nexports.providers = providers;\nconst utils = __importStar(require(\"./utils\"));\nexports.utils = utils;\nconst transactions = __importStar(require(\"./transaction\"));\nexports.transactions = transactions;\nconst validators = __importStar(require(\"./validators\"));\nexports.validators = validators;\nconst account_1 = require(\"./account\");\nObject.defineProperty(exports, \"Account\", { enumerable: true, get: function () { return account_1.Account; } });\nconst multisig = __importStar(require(\"./account_multisig\"));\nexports.multisig = multisig;\nconst accountCreator = __importStar(require(\"./account_creator\"));\nexports.accountCreator = accountCreator;\nconst connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return connection_1.Connection; } });\nconst signer_1 = require(\"./signer\");\nObject.defineProperty(exports, \"Signer\", { enumerable: true, get: function () { return signer_1.Signer; } });\nObject.defineProperty(exports, \"InMemorySigner\", { enumerable: true, get: function () { return signer_1.InMemorySigner; } });\nconst contract_1 = require(\"./contract\");\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return contract_1.Contract; } });\nconst key_pair_1 = require(\"./utils/key_pair\");\nObject.defineProperty(exports, \"KeyPair\", { enumerable: true, get: function () { return key_pair_1.KeyPair; } });\nconst near_1 = require(\"./near\");\nObject.defineProperty(exports, \"Near\", { enumerable: true, get: function () { return near_1.Near; } });\n// TODO: Deprecate and remove WalletAccount\nconst wallet_account_1 = require(\"./wallet-account\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", { enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } });\nObject.defineProperty(exports, \"WalletAccount\", { enumerable: true, get: function () { return wallet_account_1.WalletAccount; } });\nObject.defineProperty(exports, \"WalletConnection\", { enumerable: true, get: function () { return wallet_account_1.WalletConnection; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nconst web_1 = require(\"./utils/web\");\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await web_1.fetchJson(`${this.helperUrl}/account`, JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }));\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logWarning = exports.rpc_errors = exports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.format = exports.enums = exports.web = exports.serialize = exports.key_pair = void 0;\nconst key_pair = __importStar(require(\"./key_pair\"));\nexports.key_pair = key_pair;\nconst serialize = __importStar(require(\"./serialize\"));\nexports.serialize = serialize;\nconst web = __importStar(require(\"./web\"));\nexports.web = web;\nconst enums = __importStar(require(\"./enums\"));\nexports.enums = enums;\nconst format = __importStar(require(\"./format\"));\nexports.format = format;\nconst rpc_errors = __importStar(require(\"./rpc_errors\"));\nexports.rpc_errors = rpc_errors;\nconst key_pair_1 = require(\"./key_pair\");\nObject.defineProperty(exports, \"PublicKey\", { enumerable: true, get: function () { return key_pair_1.PublicKey; } });\nObject.defineProperty(exports, \"KeyPair\", { enumerable: true, get: function () { return key_pair_1.KeyPair; } });\nObject.defineProperty(exports, \"KeyPairEd25519\", { enumerable: true, get: function () { return key_pair_1.KeyPairEd25519; } });\nconst errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return errors_1.logWarning; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = exports.ErrorContext = exports.TypedError = void 0;\n/**\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the NEAR RPC API.\n * @see {@link providers/provider} for a list of request and response types\n */\nconst depd_1 = __importDefault(require(\"depd\"));\nconst provider_1 = require(\"./provider\");\nconst web_1 = require(\"../utils/web\");\nconst errors_1 = require(\"../utils/errors\");\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return errors_1.TypedError; } });\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return errors_1.ErrorContext; } });\nconst borsh_1 = require(\"borsh\");\nconst exponential_backoff_1 = __importDefault(require(\"../utils/exponential-backoff\"));\nconst rpc_errors_1 = require(\"../utils/rpc_errors\");\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the NEAR RPC API.\n * @see {@link https://github.com/near/nearcore/tree/master/chain/jsonrpc}\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /**\n     * @param connectionInfoOrUrl ConnectionInfo or RPC API endpoint URL (deprecated)\n     */\n    constructor(connectionInfoOrUrl) {\n        super();\n        if (connectionInfoOrUrl != null && typeof connectionInfoOrUrl == 'object') {\n            this.connection = connectionInfoOrUrl;\n        }\n        else {\n            const deprecate = depd_1.default('JsonRpcProvider(url?: string)');\n            deprecate('use `JsonRpcProvider(connectionInfo: ConnectionInfo)` instead');\n            this.connection = { url: connectionInfoOrUrl };\n        }\n    }\n    /**\n     * Gets the RPC's status\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#general-validator-status}\n     */\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await}\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    async sendTransaction(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransactionAsync(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_async', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#transaction-status}\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    async txStatus(txHash, accountId) {\n        if (typeof txHash === 'string') {\n            return this.txStatusString(txHash, accountId);\n        }\n        else {\n            return this.txStatusUint8Array(txHash, accountId);\n        }\n    }\n    async txStatusUint8Array(txHash, accountId) {\n        return this.sendJsonRpc('tx', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    async txStatusString(txHash, accountId) {\n        return this.sendJsonRpc('tx', [txHash, accountId]);\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatusReceipts(txHash, accountId) {\n        return this.sendJsonRpc('EXPERIMENTAL_tx_status', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts)\n     * Query the RPC by passing an {@link RpcQueryRequest}\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts}\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    async query(...args) {\n        let result;\n        if (args.length === 1) {\n            result = await this.sendJsonRpc('query', args[0]);\n        }\n        else {\n            const [path, data] = args;\n            result = await this.sendJsonRpc('query', [path, data]);\n        }\n        if (result && result.error) {\n            throw new errors_1.TypedError(`Querying ${args} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, rpc_errors_1.getErrorTypeFromErrorMessage(result.error));\n        }\n        return result;\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see {@link https://docs.near.org/docs/interaction/rpc#block}\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    async block(blockQuery) {\n        const { finality } = blockQuery;\n        let { blockId } = blockQuery;\n        if (typeof blockQuery !== 'object') {\n            const deprecate = depd_1.default('JsonRpcProvider.block(blockId)');\n            deprecate('use `block({ blockId })` or `block({ finality })` instead');\n            blockId = blockQuery;\n        }\n        return this.sendJsonRpc('block', { block_id: blockId, finality });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#block-details)\n     */\n    async blockChanges(blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see {@link https://docs.near.org/docs/interaction/rpc#chunk}\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#detailed-validator-status}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.sendJsonRpc('validators', [blockId]);\n    }\n    /**\n     * @deprecated\n     * Gets the genesis config from RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#genesis-config}\n     */\n    async experimental_genesisConfig() {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_protocolConfig()');\n        deprecate('use `experimental_protocolConfig({ sync_checkpoint: \\'genesis\\' })` to fetch the up-to-date or genesis protocol config explicitly');\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', { sync_checkpoint: 'genesis' });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     * @see {@link }\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    async experimental_protocolConfig(blockReference) {\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', blockReference);\n    }\n    /**\n     * @deprecated Use {@link lightClientProof} instead\n     */\n    async experimental_lightClientProof(request) {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_lightClientProof(request)');\n        deprecate('use `lightClientProof` instead');\n        return await this.lightClientProof(request);\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see {@link https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof}\n     */\n    async lightClientProof(request) {\n        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accessKeyChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'all_access_key_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    async singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'single_access_key_changes',\n            keys: accessKeyArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accountChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'account_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'data_changes',\n            account_ids: accountIdArray,\n            key_prefix_base64: keyPrefix,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractCodeChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'contract_code_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#gas-price}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async gasPrice(blockId) {\n        return await this.sendJsonRpc('gas_price', [blockId]);\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    async sendJsonRpc(method, params) {\n        const response = await exponential_backoff_1.default(REQUEST_RETRY_WAIT, REQUEST_RETRY_NUMBER, REQUEST_RETRY_WAIT_BACKOFF, async () => {\n            try {\n                const request = {\n                    method,\n                    params,\n                    id: (_nextId++),\n                    jsonrpc: '2.0'\n                };\n                const response = await web_1.fetchJson(this.connection, JSON.stringify(request));\n                if (response.error) {\n                    if (typeof response.error.data === 'object') {\n                        if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                            throw new errors_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                        }\n                        throw rpc_errors_1.parseRpcError(response.error.data);\n                    }\n                    else {\n                        const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                        // NOTE: All this hackery is happening because structured errors not implemented\n                        // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                        if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')\n                            || errorMessage.includes('query has timed out')) {\n                            throw new errors_1.TypedError(errorMessage, 'TimeoutError');\n                        }\n                        throw new errors_1.TypedError(errorMessage, rpc_errors_1.getErrorTypeFromErrorMessage(response.error.data));\n                    }\n                }\n                // Success when response.error is not exist\n                return response;\n            }\n            catch (error) {\n                if (error.type === 'TimeoutError') {\n                    if (!process.env['NEAR_NO_LOGS']) {\n                        console.warn(`Retrying request to ${method} as it has timed out`, params);\n                    }\n                    return null;\n                }\n                throw error;\n            }\n        });\n        const { result } = response;\n        // From jsonrpc spec:\n        // result\n        //   This member is REQUIRED on success.\n        //   This member MUST NOT exist if there was an error invoking the method.\n        if (typeof result === 'undefined') {\n            throw new errors_1.TypedError(`Exceeded ${REQUEST_RETRY_NUMBER} attempts for request to ${method}.`, 'RetriesExceeded');\n        }\n        return result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signTransaction = exports.createTransaction = exports.SCHEMA = exports.Action = exports.SignedTransaction = exports.Transaction = exports.Signature = exports.deleteAccount = exports.deleteKey = exports.addKey = exports.stake = exports.transfer = exports.functionCall = exports.stringifyJsonOrBytes = exports.deployContract = exports.createAccount = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.functionCallAccessKey = exports.fullAccessKey = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst enums_1 = require(\"./utils/enums\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nclass FunctionCallPermission extends enums_1.Assignable {\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends enums_1.Assignable {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends enums_1.Enum {\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends enums_1.Assignable {\n}\nexports.AccessKey = AccessKey;\nfunction fullAccessKey() {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ fullAccess: new FullAccessPermission({}) }) });\n}\nexports.fullAccessKey = fullAccessKey;\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ functionCall: new FunctionCallPermission({ receiverId, allowance, methodNames }) }) });\n}\nexports.functionCallAccessKey = functionCallAccessKey;\nclass IAction extends enums_1.Assignable {\n}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {\n}\nexports.Transfer = Transfer;\nclass Stake extends IAction {\n}\nexports.Stake = Stake;\nclass AddKey extends IAction {\n}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {\n}\nexports.DeleteAccount = DeleteAccount;\nfunction createAccount() {\n    return new Action({ createAccount: new CreateAccount({}) });\n}\nexports.createAccount = createAccount;\nfunction deployContract(code) {\n    return new Action({ deployContract: new DeployContract({ code }) });\n}\nexports.deployContract = deployContract;\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    const serializedArgs = isUint8Array ? args : Buffer.from(JSON.stringify(args));\n    return serializedArgs;\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n */\nfunction functionCall(methodName, args, gas, deposit, stringify = stringifyJsonOrBytes) {\n    return new Action({ functionCall: new FunctionCall({ methodName, args: stringify(args), gas, deposit }) });\n}\nexports.functionCall = functionCall;\nfunction transfer(deposit) {\n    return new Action({ transfer: new Transfer({ deposit }) });\n}\nexports.transfer = transfer;\nfunction stake(stake, publicKey) {\n    return new Action({ stake: new Stake({ stake, publicKey }) });\n}\nexports.stake = stake;\nfunction addKey(publicKey, accessKey) {\n    return new Action({ addKey: new AddKey({ publicKey, accessKey }) });\n}\nexports.addKey = addKey;\nfunction deleteKey(publicKey) {\n    return new Action({ deleteKey: new DeleteKey({ publicKey }) });\n}\nexports.deleteKey = deleteKey;\nfunction deleteAccount(beneficiaryId) {\n    return new Action({ deleteAccount: new DeleteAccount({ beneficiaryId }) });\n}\nexports.deleteAccount = deleteAccount;\nclass Signature extends enums_1.Assignable {\n}\nexports.Signature = Signature;\nclass Transaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, Transaction, bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, SignedTransaction, bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends enums_1.Enum {\n}\nexports.Action = Action;\nexports.SCHEMA = new Map([\n    [Signature, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [64]]\n            ] }],\n    [SignedTransaction, { kind: 'struct', fields: [\n                ['transaction', Transaction],\n                ['signature', Signature]\n            ] }],\n    [Transaction, { kind: 'struct', fields: [\n                ['signerId', 'string'],\n                ['publicKey', key_pair_1.PublicKey],\n                ['nonce', 'u64'],\n                ['receiverId', 'string'],\n                ['blockHash', [32]],\n                ['actions', [Action]]\n            ] }],\n    [key_pair_1.PublicKey, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [32]]\n            ] }],\n    [AccessKey, { kind: 'struct', fields: [\n                ['nonce', 'u64'],\n                ['permission', AccessKeyPermission],\n            ] }],\n    [AccessKeyPermission, { kind: 'enum', field: 'enum', values: [\n                ['functionCall', FunctionCallPermission],\n                ['fullAccess', FullAccessPermission],\n            ] }],\n    [FunctionCallPermission, { kind: 'struct', fields: [\n                ['allowance', { kind: 'option', type: 'u128' }],\n                ['receiverId', 'string'],\n                ['methodNames', ['string']],\n            ] }],\n    [FullAccessPermission, { kind: 'struct', fields: [] }],\n    [Action, { kind: 'enum', field: 'enum', values: [\n                ['createAccount', CreateAccount],\n                ['deployContract', DeployContract],\n                ['functionCall', FunctionCall],\n                ['transfer', Transfer],\n                ['stake', Stake],\n                ['addKey', AddKey],\n                ['deleteKey', DeleteKey],\n                ['deleteAccount', DeleteAccount],\n            ] }],\n    [CreateAccount, { kind: 'struct', fields: [] }],\n    [DeployContract, { kind: 'struct', fields: [\n                ['code', ['u8']]\n            ] }],\n    [FunctionCall, { kind: 'struct', fields: [\n                ['methodName', 'string'],\n                ['args', ['u8']],\n                ['gas', 'u64'],\n                ['deposit', 'u128']\n            ] }],\n    [Transfer, { kind: 'struct', fields: [\n                ['deposit', 'u128']\n            ] }],\n    [Stake, { kind: 'struct', fields: [\n                ['stake', 'u128'],\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [AddKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey],\n                ['accessKey', AccessKey]\n            ] }],\n    [DeleteKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [DeleteAccount, { kind: 'struct', fields: [\n                ['beneficiaryId', 'string']\n            ] }],\n]);\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    return new Transaction({ signerId, publicKey, nonce, receiverId, actions, blockHash });\n}\nexports.createTransaction = createTransaction;\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etc…)\n */\nasync function signTransactionObject(transaction, signer, accountId, networkId) {\n    const message = borsh_1.serialize(exports.SCHEMA, transaction);\n    const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n    const signature = await signer.signMessage(message, accountId, networkId);\n    const signedTx = new SignedTransaction({\n        transaction,\n        signature: new Signature({ keyType: transaction.publicKey.keyType, data: signature.signature })\n    });\n    return [hash, signedTx];\n}\nasync function signTransaction(...args) {\n    if (args[0].constructor === Transaction) {\n        const [transaction, signer, accountId, networkId] = args;\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n    else {\n        const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n        const publicKey = await signer.getPublicKey(accountId, networkId);\n        const transaction = createTransaction(accountId, publicKey, receiverId, nonce, actions, blockHash);\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n}\nexports.signTransaction = signTransaction;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = new bn_js_1.default('30000000000000');\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst mustache_1 = __importDefault(require(\"mustache\"));\nconst rpc_error_schema_json_1 = __importDefault(require(\"../generated/rpc_error_schema.json\"));\nconst error_messages_json_1 = __importDefault(require(\"../res/error_messages.json\"));\nconst common_index_1 = require(\"../common-index\");\nconst errors_1 = require(\"../utils/errors\");\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => common_index_1.utils.format.formatNearAmount(render(n))\n};\nclass ServerError extends errors_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], {\n            ...errorData,\n            ...mustacheHelpers\n        });\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return 'UntypedError';\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst providers_1 = require(\"./providers\");\nconst errors_1 = require(\"./utils/errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (args = {}, options = {}, ...ignored) => {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                })\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (...args) => {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = depd_1.default('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        return this._changeMethod({\n                            methodName,\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        });\n                    }\n                    return this._changeMethod({ methodName, ...args[0] });\n                })\n            });\n        });\n    }\n    async _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        validateBNLike({ gas, amount });\n        const rawResult = await this.account.functionCall({\n            contractId: this.contractId,\n            methodName,\n            args,\n            gas,\n            attachedDeposit: amount,\n            walletMeta: meta,\n            walletCallbackUrl: callbackUrl\n        });\n        return providers_1.getTransactionLastResult(rawResult);\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeKeyStore = exports.BrowserLocalStorageKeyStore = exports.InMemoryKeyStore = exports.KeyStore = void 0;\n/** @hidden @module */\nconst keystore_1 = require(\"./keystore\");\nObject.defineProperty(exports, \"KeyStore\", { enumerable: true, get: function () { return keystore_1.KeyStore; } });\nconst in_memory_key_store_1 = require(\"./in_memory_key_store\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", { enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } });\nconst browser_local_storage_key_store_1 = require(\"./browser_local_storage_key_store\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", { enumerable: true, get: function () { return browser_local_storage_key_store_1.BrowserLocalStorageKeyStore; } });\nconst merge_key_store_1 = require(\"./merge_key_store\");\nObject.defineProperty(exports, \"MergeKeyStore\", { enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } });\n","\"use strict\";\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransactionLastResult = exports.Provider = exports.IdType = exports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n/** @hidden */\nclass Provider {\n}\nexports.Provider = Provider;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @hidden @module */\nexports.keyStores = __importStar(require(\"./key_stores/browser-index\"));\n__exportStar(require(\"./common-index\"), exports);\n__exportStar(require(\"./browser-connect\"), exports);\nrequire(\"error-polyfill\");\n","'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connect = void 0;\n/**\n * Connect to NEAR using the provided configuration.\n *\n * {@link ConnectConfig.networkId} and {@link ConnectConfig.nodeUrl} are required.\n *\n * To sign transactions you can also pass: {@link ConnectConfig.keyStore}\n *\n * Both are passed they are prioritize in that order.\n *\n * @see {@link ConnectConfig}\n * @example\n * ```js\n * async function initNear() {\n *   const near = await connect({\n *      networkId: 'testnet',\n *      nodeUrl: 'https://rpc.testnet.near.org'\n *   })\n * }\n * ```\n *\n * @module browserConnect\n */\nconst near_1 = require(\"./near\");\n/**\n * Initialize connection to Near network.\n */\nasync function connect(config) {\n    return new near_1.Near(config);\n}\nexports.connect = connect;\n","'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @params validators: current or next epoch validators.\n * @params maxNumberOfSeats: maximum number of seats in the network.\n * @params minimumStakeRatio: minimum stake ratio\n * @params protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = depd_1.default('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // harcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const num = new bn_js_1.default(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (stakesSum.lt(num)) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = new bn_js_1.default(1), right = stakesSum.add(new bn_js_1.default(1));\n    while (!left.eq(right.sub(new bn_js_1.default(1)))) {\n        const mid = left.add(right).div(new bn_js_1.default(2));\n        let found = false;\n        let currentSum = new bn_js_1.default(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum.add(stakes[i].div(mid));\n            if (currentSum.gte(num)) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum.mul(new bn_js_1.default(minimumStakeRatio[0])).div(new bn_js_1.default(minimumStakeRatio[1]));\n    }\n    else {\n        return stakes[0].add(new bn_js_1.default(1));\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @params currentValidators: list of current validators.\n * @params nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n","module.exports = function () {\r\n    throw new Error(\"Not implemented.\");\r\n};","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst account_1 = require(\"./account\");\nconst connection_1 = require(\"./connection\");\nconst contract_1 = require(\"./contract\");\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = connection_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n            this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    async account(accountId) {\n        const account = new account_1.Account(this.connection, accountId);\n        return account;\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    async createAccount(accountId, publicKey) {\n        if (!this.accountCreator) {\n            throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n        }\n        await this.accountCreator.createAccount(accountId, publicKey);\n        return new account_1.Account(this.connection, accountId);\n    }\n    /**\n     * @deprecated Use {@link Contract} instead.\n     * @param contractId\n     * @param options\n     */\n    async loadContract(contractId, options) {\n        const account = new account_1.Account(this.connection, options.sender);\n        return new contract_1.Contract(account, contractId, options);\n    }\n    /**\n     * @deprecated Use {@link Account.sendMoney} instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    async sendTokens(amount, originator, receiver) {\n        console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n        const account = new account_1.Account(this.connection, originator);\n        const result = await account.sendMoney(receiver, amount);\n        return result.transaction_outcome.id;\n    }\n}\nexports.Near = Near;\n","module.exports = {\r\n    Class: require(\"./Class\"),\r\n    abstractMethod: require(\"./abstractMethod\")\r\n};"],"sourceRoot":""}